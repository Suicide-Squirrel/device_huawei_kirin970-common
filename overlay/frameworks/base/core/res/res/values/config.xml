<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate.

     NOTE: The naming convention is "config_camelCaseValue". Some legacy
     entries do not follow the convention, but all new entries should. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>40</item>
        <item>100</item>
        <item>325</item>
        <item>600</item>
        <item>1250</item>
        <item>2200</item>
        <item>4000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>11</item>   <!-- 0-1 -->
        <item>22</item>   <!-- 1-40 -->
        <item>47</item>   <!-- 40-100 -->
        <item>61</item>   <!-- 100-325 -->
        <item>84</item>   <!-- 325-600 -->
        <item>107</item>  <!-- 600-1250 -->
        <item>154</item>  <!-- 1250-2200 -->
        <item>212</item>  <!-- 2200-4000 -->
        <item>245</item>  <!-- 4000-10000 -->
        <item>255</item>  <!-- 10000+ -->
        </integer-array>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">72</integer>

    <!-- Light sensor event rate in milliseconds for automatic brightness control. -->
    <integer name="config_autoBrightnessLightSensorRate">300</integer>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been
         turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOff">true</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.
         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.
         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">false</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
        <item>"softap.*"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bt-pan"</item>
    </string-array>

    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
         [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>1</item>
        <item>0</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Boolean indicating whether the wifi chipset supports background scanning mechanism.
         This mechanism allows the host to remain in suspend state and the dongle to actively
         scan and wake the host when a configured SSID is detected by the dongle. This chipset
         capability can provide power savings when wifi needs to be always kept on. -->
    <bool name="config_wifi_background_scan_support">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Allow screen mirroring/miracast -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/boot-framework.vdex"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/oat/arm64/services.vdex"</item>
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/boot.vdex"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/system/framework/boot-core-libart.vdex"</item>
    </string-array>

    <!-- Should the pinner service pin the Camera application? -->
    <bool name="config_pinnerCameraApp">true</bool>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">true</bool>
    <integer name="config_proximityCheckTimeout">200</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">true</bool>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:

         // Device has a color adjustable battery light.
         LIGHTS_RGB_NOTIFICATION_LED = 1

         // Device has a color adjustable notification light.
         LIGHTS_RGB_BATTERY_LED = 2

         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)

         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8

         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16

         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32

         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64

         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128

         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">107</integer>

    <!-- The list of vendor package signatures that should also be considered
         platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures" translatable="false">
        <item>30820405308202eda00302010202090083309550b47e0583300d06092a864886f70d0101050500308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d301e170d3136303530353037333531345a170d3433303932313037333531345a308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100c9fe1b699203091cb3944030cb1ba7996567182c1ce8be5535d673bc2025f37958e5bb1f4ed870dc229ffc2ed7d16f6cf10c08bc63f53624abe49db543518ef0069686ea5b3f129188652e87eca4b794df591828dd94de14b91ddbf2af156426453b8e739b12625a44b0895bfa1db3cdcce7db52f4d5af7c9918c325475c8273a5e4fe002e0f68082e9ec61d100913618982928ab5767701a8f576113c0810a4850a606233fd654531562bf8a74ac81bf8bacd66ca8a5ca9751f08e9575b402221e48e474f7f2dc91d02cfd87ceeaeb39ccf754cff5f1e8dfe23587955481bf0b8a386993edadc0f725e124f1ecedbef8d3cfbd6ddc783cde4b193f79fae05ed0203010001a350304e301d0603551d0e041604148d42132bfdc2ed970e25f5677cedd26f32527bc8301f0603551d230418301680148d42132bfdc2ed970e25f5677cedd26f32527bc8300c0603551d13040530030101ff300d06092a864886f70d010105050003820101003bc6e2ba8703a211222da8ed350e12cf31ac4d91290c5524da44626c382c8186f8238860b7ebddebba996f204802d72246d1326332ca85aff4a10cdaaa0d886016e26075c9b98799bf4767663d8c1097dccbc609dd3946f6431a35a71ee9ff3731c5b2715c158fe8d64c700b7e3e387e63a62e80ecdd4d007af242abed4b694d5a70d12dbde433fd18e1a7d033142f44cbe9ca187134830b86ecfa78ae2ff6d201014e4cf1d1655f40f4e4f4dd04af3c0416709dd159845d25515ff12f2854180e2ccbc1b05dffce93f9487839c126fa39f1453468a41eb7872b84c736dcb0d90a29775cd863707044f28bce4d05edcce4699605b27ae11e981590f87384726d</item>
        <item>30820405308202eda003020102020900a0f3d3dcf6866b0b300d06092a864886f70d0101050500308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d301e170d3136303530353037333634315a170d3433303932313037333634315a308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100a3a569b7bf84148627c77b8e78c0dcc2e38e5242f2c23a6889c0c4ee3265dbd98a47ed20acabce24ce35b58f35c1255bd2c759228a1cd649cc156c1ea74401bcbf8863ecae4f88f34f43fed2d38e3b5c480d7629770731a81e50cd41dd3b4112346be520624269fefc06ceaf07329db8e731a7c5d344e09c1176f126201d5c13adb0d7df26a332093ff47c542233a8e21001313a28d7179b362606c3c5fd02299da926251aa9d9f136ae99f8f36369e311af25236a43d11e616836490a81141630308a678dcd2d1e5a712c00a60030b9b2e704e774b218565fce8103022fac615c46ff9fa13869de4b34fcbb9df199e63d0df858e2c12b3b13c8d7c8292426550203010001a350304e301d0603551d0e04160414a9c3053753829883509f86d8ceacb2452cc49f84301f0603551d23041830168014a9c3053753829883509f86d8ceacb2452cc49f84300c0603551d13040530030101ff300d06092a864886f70d0101050500038201010091a55307ff067287621b821e09a0e0e4ffd4ad843fe5e43ab7ca94a2b6e769f167037b663267dd6d5566fec26546fd9994ae985e1ab84c186f2ba5090c1fdcb9a31fc14d959a930b0ce6fd5f874f13c97bfa3492fbdbf014212af793342bdf291d1edb304c2173812fa04d01f60423bdd61f6d0f0a6c8522e30fdff183fd2a399e17c5a1b08624ffbcebe3b56ae60ab83008fbaa12af8881f138edde95f716fad35c8bb56e9e0bf8f73a2481646660905de80049908d7179c325f7acd82d094223506ae82e0ca6f1b44d8c43c271f684d721d31350b89a17c719277901ec586a168f702da9d7f0fa2d92c7bbe41a5c1326775f238b73d224d2a8d8c42cfef08a</item>
        <item>30820405308202eda003020102020900e48675a71f17e5df300d06092a864886f70d0101050500308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d301e170d3136303530353037333734335a170d3433303932313037333734335a308198310b300906035504061302434e3112301006035504080c094775616e67646f6e673112301006035504070c095368656e677a68656e310f300d060355040a0c0648756177656931183016060355040b0c0f5465726d696e616c436f6d70616e793114301206035504030c0b416e64726f69645465616d3120301e06092a864886f70d01090116116d6f62696c65406875617765692e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100b028e46ac18d6fa5d8ada155d948262c92d1d362c15b357e4393cd311d7daefef379feab33c9e8b3f8de127ac2f9c37e158afbe64157da6ff9baf00590bfdf6cb0646fa480c723e65dfb5059a95cd8027b9dc27c911540ba10c1539f9dfd5687c237dc8a20dad0ea0783ab642bb787dc35db4493045725a490614bcce2f0596512d7a5f718c81f09197ca71effdc52e54231abc59837e3d654eb5a300e7cf789d8a61fc2d4fea7a73661e0e8f2865c4787dce97f31f7e9c38179e9e8bba9951e2504583f78f536e37e2d3834bc743b6da69e18802961afe2ab55ab544ee3fa31fc8687ac1fb3f3db84d834e4dc56c26f9dbbaaf7452a69749dbb30c1723a8f3d0203010001a350304e301d0603551d0e04160414a4c8e951756a21e75e025124dec59bd45f416498301f0603551d23041830168014a4c8e951756a21e75e025124dec59bd45f416498300c0603551d13040530030101ff300d06092a864886f70d010105050003820101002913b3196b45fd1545c9fa43c3486b35932b0272ef381ad3d3345d750941a9d53375ded9691e7012a7a1fa07bc3d6bb84e03adedb69c236c357fb551c5562339a37e95c2a537982071a1d3f721ce21df926d507943dc73dcec9d555f1d569277152d9aff70b6667cd72e1623c069c8c4a108620bf39904f6667ad7438348e3def7070b6a34113c265333d6c755d469843f085e8c296ed2c179f24dba58b238d6bc1638bcedca3d9f925c7bb1d0128abb4b063874fc3289662dd1e098e0b6edfc27a9939ba216c2a518703bfafbd0e0f82402b55d2a5bbecfa579c1d5f7a6218b0ff14a1c014ced82071000e7ca7be4b0296097ec30b42f898f2e4c62a60982dc</item>
    </string-array>

    <!-- Paths to fast charging status file to detect whether an oem fast charger is active -->
    <string-array name="config_oemFastChargerStatusPaths" translatable="false">
        <item>/sys/class/power_supply/Battery/fcp_status</item>
        <item>/sys/class/power_supply/Battery/scp_status</item>
    </string-array>

    <!-- Whether a software navigation bar should be shown. -->
    <bool name="config_showNavigationBar">true</bool>
    
    <!-- Enable doze alwaysOn Display -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Whether the display blanks itself when transition from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">true</bool>

    <!-- Set AOD off by default -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Whether device has super charging support -->
    <bool name="config_hasSuperCharger">true</bool>

    <!-- Control the behavior when the user triple presses the power button.
            0 - Nothing
            1 - Toggle theater mode setting
            2 - Brightness boost
    -->
    <integer name="config_triplePressOnPowerBehavior">2</integer>

      <!-- Override the default detection behavior for the framework method
         android.view.ViewConfiguration#hasPermanentMenuKey().
         Valid settings are:
         0 - No change. Use the default autodetection behavior.
         1 - The device DOES have a permanent menu key; ignore autodetection.
         2 - The device DOES NOT have a permanent menu key; ignore autodetection. -->
    <integer name="config_overrideHasPermanentMenuKey">2</integer>

    <!-- Audio panel view placement. Is left side enabled -->
    <bool name="config_audioPanelOnLeftSide">true</bool>

    <!-- Values for GPS configuration -->
    <string-array translatable="false" name="config_gpsParameters">
        <item>XTRA_SERVER_1=https://xtrapath1.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_2=https://xtrapath2.izatcloud.net/xtra3grc.bin</item>
        <item>XTRA_SERVER_3=https://xtrapath3.izatcloud.net/xtra3grc.bin</item>
        <item>SUPL_HOST=supl.google.com</item>
        <item>SUPL_PORT=7275</item>
        <item>SUPL_VER=0x20000</item>
        <item>SUPL_MODE=1</item>
        <item>SUPL_ES=0</item>
        <item>LPP_PROFILE=0</item>
        <item>USE_EMERGENCY_PDN_FOR_EMERGENCY_SUPL=1</item>
        <item>A_GLONASS_POS_PROTOCOL_SELECT=0</item>
        <item>GPS_LOCK=0</item>
    </string-array>
</resources>
